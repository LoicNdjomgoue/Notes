body{
    background-color: hsl(0, 0%, 12%);
}

#box{
    width: 250px;
    height: 250px;
    background-color: red;
    font-size: 13em;
    text-align: center;
    animation-name: slideRight;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    /* for fadeIN */
   /* opacity: 0; */}

@keyframes slideLeft{
    from{transform: translateX(300%);}
}
#box:hover{
    animation-name: colorChange;
}
@keyframes slideRight{
    to{transform: translateX(300%);}
}
@keyframes slideUp{
    from{transform: translateY(300%);}
}
@keyframes slideDown{
    to{transform: translateY(300%);}
} 
@keyframes rotateZ{
    50%{transform: rotateZ(360deg);}
}
@keyframes rotateY{
    50%{transform: rotateY(360deg);}
}
@keyframes rotateX{
    50%{transform: rotateX(360deg);}
}
@keyframes grow{
    50%{transform: scale(2);}
}
@keyframes shrink{
    50%{transform: scale(0.5);}
}
@keyframes fadeOut{
    50%{opacity: 0;}
}
@keyframes fadeIn{
    50%{opacity: 1;}
}
@keyframes colorChange{
    0%{background-color: red;}
    20%{background-color: blue;}
    40%{background-color: green;}
    60%{background-color: yellow;}
    80%{background-color: purple}
    100%{background-color: pink;}
}
@keyframes glow{
    0%{box-shadow: 0 0 5px green;}
    50%{box-shadow: 0 0 20px yellow;}
    100%{box-shadow: 0 0 5px blue;}
}


/* CSS Animations */

/* Animation properties:
   - animation-name: name of the animation (@keyframes)
   - animation-duration: time to complete one cycle
   - animation-timing-function: speed curve (linear, ease, steps etc.)
     steps is like stop motion animation
   - animation-delay: wait time before starting
   - animation-iteration-count: number of times to play
   - animation-direction: normal, reverse, or alternate cycles
   - animation-fill-mode: styles applied outside active animation
   - animation-play-state: running or paused
*/

/* Keyframes:
   - Define the stages of an animation using @keyframes.
   - Use percentages (0%, 50%, 100%) or keywords (from, to) to set styles at different points.
   - Multiple keyframes allow complex effects like move, fade, scale, or rotate.
   - Can respond to user interactions (hover, click).
*/

/* from & to keywords:
   - 'from' = starting state of the element
   - 'to' = ending state of the element
   - Can animate position, color, size, opacity, etc.
   - Percentages allow intermediate points for smoother transitions (e.g., 0%, 50%, 100%).
*/

/* @keyframes rotate:
   - 50% = halfway through the animation duration
   - At 50%, the element rotates 360Â° around the Z-axis
   - CSS interpolates rotation between keyframes (smooth transition)
   - You can apply this animation with animation-name: rotate
*/